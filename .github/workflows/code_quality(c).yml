name: Code Quality (C)

on:
  push:
    branches:
      - main
    paths:
      - '**/*.c'
  pull_request:
    branches:
      - main
    paths:
      - '**/*.c'
  workflow_dispatch:
    inputs:
      custom_username:
        description: 'Enter custom username (default is "default-user")'
        required: false
        default: 'default-user'

jobs:
  lint:
    name: Lint C Codebase
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Cppcheck and Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cppcheck libxml2-utils # Install libxml2-utils for xmllint

      - name: Run Cppcheck and Generate XML Report
        run: |
          # Run cppcheck on all C files in the repo and output to an XML file
          cppcheck --enable=all --inconclusive --xml . 2> cppcheck-report.xml || true

          # If the XML report is empty, add a message
          if [ ! -s cppcheck-report.xml ]; then
            echo "<errors>No issues found by Cppcheck.</errors>" > cppcheck-report.xml
          fi

      - name: Generate HTML Report from XML
        run: |
          # Generate an HTML report using cppcheck-htmlreport
          cppcheck-htmlreport --file=cppcheck-report.xml --report-dir=cppcheck_reports --source-dir=. || true

      - name: Calculate Quality Score
        id: calculate_score
        run: |
          # Extract errors, warnings, and convention counts from the cppcheck XML report
          ERROR_COUNT=$(xmllint --xpath "count(//error[@severity='error'])" cppcheck-report.xml)
          WARNING_COUNT=$(xmllint --xpath "count(//error[@severity='warning'])" cppcheck-report.xml)
          CONVENTIONS_COUNT=$(xmllint --xpath "count(//error[@severity='style'])" cppcheck-report.xml)

          # Calculate Logical Lines of Code (LLOC) as the sum of errors, warnings, and conventions
          LLOC=$((ERROR_COUNT + WARNING_COUNT + CONVENTIONS_COUNT))

          # Calculate the quality score using the formula
          if [ "$LLOC" -eq 0 ]; then
            echo "No logical lines of code found. Setting quality score to 0."
            QUALITY_SCORE=0
          else
            QUALITY_SCORE=$(awk "BEGIN {printf \"%.2f\", ((5 * $ERROR_COUNT + $WARNING_COUNT + $CONVENTIONS_COUNT) / $LLOC) * 10 -10.0}")
          fi

          echo "Quality Score: $QUALITY_SCORE"
          echo "quality_score=$QUALITY_SCORE" >> $GITHUB_ENV

      - name: Append Quality Score to HTML Report
        run: |
          QUALITY_SCORE=${{ env.quality_score }}
          echo "<h2>Quality Score: $QUALITY_SCORE</h2>" >> cppcheck_reports/index.html

      - name: Move Cppcheck Reports to docs/
        run: |
          # Use a custom username from workflow inputs or default to "default-user"
          USERNAME="${{ github.event.inputs.custom_username || 'default-user' }}"

          # Define the path for the user's folder in the docs directory
          DOCS_FOLDER="docs/$USERNAME"

          # Create the docs folder if it doesn't exist
          mkdir -p "$DOCS_FOLDER"

          # Move the cppcheck HTML report to the user's folder in the docs directory
          if [ -d "cppcheck_reports" ]; then
            mv cppcheck_reports/* "$DOCS_FOLDER/"
          else
            echo "No HTML report found. Exiting."
            exit 1
          fi

      - name: Upload Cppcheck HTML Report as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: cppcheck-html-report
          path: docs/${{ github.event.inputs.custom_username || 'default-user' }}/

      - name: Commit and Push Cppcheck Reports to GitHub Pages
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # Add and commit the cppcheck reports
          git add docs/${{ github.event.inputs.custom_username || 'default-user' }}/
          git commit -m "Update Cppcheck report for ${{ github.event.inputs.custom_username || 'default-user' }}"

          # Push the changes to GitHub Pages
          git push https://x-access-token:${GH_PAT}@github.com/${{ github.repository }} main --force
      - name: Call API to Insert Quality Score
        run: |
         API_URL="https://dolphin-app-uzion.ondigitalocean.app/api/setQuality?clientpublic=baef7468287a44d8ac3634026d9fb8d1&clientsecret=181a2f3171117c1bd164c88b1171c1b83114fc1712121b12"
         USER_ID="Akash_C"
         CLIENT_PUBLIC="baef7468287a44d8ac3634026d9fb8d1"
         CLIENT_SECRET="181a2f3171117c1bd164c88b1171c1b83114fc1712121b12"
         LAST_REQUEST_TIME="1733275263647"
         projectid="C10180"
         curl -X POST "$API_URL" \
           -H "Content-Type: application/json" \
           -d "{
              \"userid\": \"$USER_ID\",
              \"clientpublic\": \"$CLIENT_PUBLIC\",
              \"clientsecret\": \"$CLIENT_SECRET\",
              \"projectid\": \"$projectid\",
              \"recordtime\": \"$LAST_REQUEST_TIME\",
            \"quality\": \"${{ env.quality_score }}\",
              \"coverage\": \"${{ env.quality_score }}\"
            }"
 
